openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8080
  description: Generated server url
paths:
  /cliente/{id}:
    get:
      tags:
      - clientes-controller
      operationId: getById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                oneOf:
                - type: object
                - $ref: '#/components/schemas/ResponseBodyObject'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseBodyClienteResponse'
    put:
      tags:
      - clientes-controller
      operationId: update
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClienteRequest'
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                oneOf:
                - type: object
                - $ref: '#/components/schemas/ResponseBodyObject'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseBodyClienteResponse'
    delete:
      tags:
      - clientes-controller
      operationId: delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                oneOf:
                - type: object
                - $ref: '#/components/schemas/ResponseBodyObject'
        "200":
          description: OK
  /cliente/{idCliente}/endereco/{id}:
    get:
      tags:
      - enderecos-controller
      operationId: getById_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                oneOf:
                - type: object
                - $ref: '#/components/schemas/ResponseBodyObject'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseBodyClienteEnderecoResponse'
    put:
      tags:
      - enderecos-controller
      operationId: update_1
      parameters:
      - name: idCliente
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClienteEnderecoRequest'
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                oneOf:
                - type: object
                - $ref: '#/components/schemas/ResponseBodyObject'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseBodyClienteEnderecoResponse'
    delete:
      tags:
      - enderecos-controller
      operationId: delete_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                oneOf:
                - type: object
                - $ref: '#/components/schemas/ResponseBodyObject'
        "200":
          description: OK
  /cliente:
    get:
      tags:
      - clientes-controller
      operationId: getAll
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                oneOf:
                - type: object
                - $ref: '#/components/schemas/ResponseBodyObject'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseBodyListClienteResponse'
    post:
      tags:
      - clientes-controller
      operationId: create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClienteRequest'
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                oneOf:
                - type: object
                - $ref: '#/components/schemas/ResponseBodyObject'
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseBodyClienteResponse'
  /cliente/{idCliente}/endereco:
    get:
      tags:
      - enderecos-controller
      operationId: getAllByClient
      parameters:
      - name: idCliente
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                oneOf:
                - type: object
                - $ref: '#/components/schemas/ResponseBodyObject'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseBodyListClienteEnderecoResponse'
    post:
      tags:
      - enderecos-controller
      operationId: create_1
      parameters:
      - name: idCliente
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClienteEnderecoRequest'
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                oneOf:
                - type: object
                - $ref: '#/components/schemas/ResponseBodyObject'
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseBodyClienteEnderecoResponse'
components:
  schemas:
    ResponseBodyObject:
      type: object
      properties:
        message:
          type: object
        error:
          type: array
          items:
            $ref: '#/components/schemas/ResponseError'
    ResponseError:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
    ClienteEnderecoRequest:
      required:
      - cep
      - cidade
      - logradouro
      - numero
      type: object
      properties:
        cep:
          maxLength: 9
          minLength: 9
          type: string
        cidade:
          maxLength: 255
          minLength: 4
          type: string
        numero:
          maxLength: 255
          minLength: 1
          type: string
        logradouro:
          maxLength: 255
          minLength: 4
          type: string
        principal:
          type: boolean
    ClienteRequest:
      required:
      - dtNascimento
      - nome
      type: object
      properties:
        nome:
          maxLength: 255
          minLength: 4
          type: string
        dtNascimento:
          type: string
          format: date
        enderecos:
          maxItems: 10
          minItems: 0
          type: array
          items:
            $ref: '#/components/schemas/ClienteEnderecoRequest'
    ClienteEnderecoResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        cep:
          type: string
        cidade:
          type: string
        numero:
          type: string
        logradouro:
          type: string
        principal:
          type: boolean
    ClienteResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        nome:
          type: string
        dtNascimento:
          type: string
          format: date
        enderecos:
          type: array
          items:
            $ref: '#/components/schemas/ClienteEnderecoResponse'
    ResponseBodyClienteResponse:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ClienteResponse'
        error:
          type: array
          items:
            $ref: '#/components/schemas/ResponseError'
    ResponseBodyClienteEnderecoResponse:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ClienteEnderecoResponse'
        error:
          type: array
          items:
            $ref: '#/components/schemas/ResponseError'
    ResponseBodyListClienteResponse:
      type: object
      properties:
        message:
          type: array
          items:
            $ref: '#/components/schemas/ClienteResponse'
        error:
          type: array
          items:
            $ref: '#/components/schemas/ResponseError'
    ResponseBodyListClienteEnderecoResponse:
      type: object
      properties:
        message:
          type: array
          items:
            $ref: '#/components/schemas/ClienteEnderecoResponse'
        error:
          type: array
          items:
            $ref: '#/components/schemas/ResponseError'
